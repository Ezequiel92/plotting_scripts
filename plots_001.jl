#= 
  Script for plotting the data generated by 6 single galaxy simulations 
  (perform by GADGET3); using the functions of GADGETPlotting.jl.

  The snapshots and related data files are located in:
  ../../sim_data/run_00/
  ../../sim_data/run_old_model/
  ../../sim_data/run_A_01/
  ../../sim_data/run_C_01/
  ../../sim_data/run_E_01/
  ../../sim_data/run_F_01/

  The figures, GIFs and videos will be store in ../../plots/001/, in a directory 
  structure named to describe the contents within.
  
  Plots:
  - Star density field projected to the X-Y plane, for each simulation.
  - Comparison of SFR vs time between simulations.
  - Density and mass profiles of stars and gas, comparing simulations. 
  
  NOTE: profile plots have the animation capability disable until issue 
  [3199](https://github.com/JuliaPlots/Plots.jl/issues/3199) is resolved.
 =#

push!(LOAD_PATH, "../GADGETPlotting/src/")
using GADGETPlotting, Unitful, UnitfulAstro, Plots

"Base path for the directories where the figures and animations will be saved."
const BASE_OUT_PATH = "../../plots/001/"

"Directory containing the simulations."
const BASE_SRC_PATH = "../../sim_data/"

"Directories containing the snapshot files, base names of the files and labels."
const SNAPSHOTS = [
    "run_00/" "snap" "run_00"
    "run_old_model/" "snap" "run_old_model"
    "run_A_01/" "snap" "run_A_01"
    "run_C_01/" "snap" "run_C_01"
    "run_E_01/" "snap" "run_E_01"
    "run_F_01/" "snap" "run_F_01"
]

"""
Side dimension of the simulated region, with units, 
for the case of vacuum boundary conditions.
"""
const BOX_SIZE = 200UnitfulAstro.kpc

"Value of ComovingIntegrationOn: 0 -> Newtonian simulation, 1 -> Cosmological simulation."
const SIM_COSMO = 0

"Frame rate for the animations."
const FPS = 20

box_factor = [0.35, 0.2, 0.2, 0.2, 0.2, 0.2]
snap_paths = SNAPSHOTS[:, 1]
base_names = SNAPSHOTS[:, 2]
labels = reshape(SNAPSHOTS[:, 3], 1, :)

############################################################################################
# Star density field projected to the X-Y plane, for each simulation.
############################################################################################

for (i, run) in enumerate(snap_paths)
    starMapPipeline(
        base_names[i],
        BASE_SRC_PATH * run,
        "density_animation",
        FPS,
        output_path = BASE_OUT_PATH * "star_density_field/" * run,
        sim_cosmo = SIM_COSMO,
        plane = "XY",
        box_size = BOX_SIZE,
        box_factor = box_factor[i],
    )
end

############################################################################################
# Comparison between simulations of SFR vs time.
############################################################################################

pgfplotsx()

compareSimulationsPipeline(
    base_names,
    BASE_SRC_PATH .* snap_paths,
    labels,
    "compare",
    "clock_time",
    "sfr",
    output_path = BASE_OUT_PATH * "compare_sfr/",
    sim_cosmo = SIM_COSMO,
    scale = (:identity, :log10),
    smooth_data = true,
    bins = 60,
)

############################################################################################
# Comparison between simulations of the density profile of stars.
############################################################################################

# All models.
densityProfilePipeline(
    base_names,
    BASE_SRC_PATH .* snap_paths,
    "animation",
    FPS,
    "stars",
    labels,
    output_path = BASE_OUT_PATH * "density_profile/all_models/stars/",
    sim_cosmo = SIM_COSMO,
    scale = :log10,
    step = 10,
    bins = 60,
    factor = 4,
    box_factor = 0.2,
    box_size = BOX_SIZE,
)

# All but the run_00 model.
densityProfilePipeline(
    base_names[2:end],
    BASE_SRC_PATH .* snap_paths[2:end],
    "animation",
    FPS,
    "stars",
    labels[:, 2:end],
    output_path = BASE_OUT_PATH * "density_profile/new_models/stars/",
    sim_cosmo = SIM_COSMO,
    scale = :log10,
    step = 10,
    bins = 60,
    factor = 4,
    box_factor = 0.12,
    box_size = BOX_SIZE,
)

############################################################################################
# Comparison between simulations of the density profile of the gas.
############################################################################################

# All models.
densityProfilePipeline(
    base_names,
    BASE_SRC_PATH .* snap_paths,
    "animation",
    FPS,
    "gas",
    labels,
    output_path = BASE_OUT_PATH * "density_profile/all_models/gas/",
    sim_cosmo = SIM_COSMO,
    scale = :log10,
    step = 10,
    bins = 60,
    factor = 4,
    box_factor = 0.75,
    box_size = BOX_SIZE,
)

# All but the run_00 model.
densityProfilePipeline(
    base_names[2:end],
    BASE_SRC_PATH .* snap_paths[2:end],
    "animation",
    FPS,
    "gas",
    labels[:, 2:end],
    output_path = BASE_OUT_PATH * "density_profile/new_models/gas/",
    sim_cosmo = SIM_COSMO,
    scale = :log10,
    step = 10,
    bins = 60,
    factor = 4,
    box_factor = 0.3,
    box_size = BOX_SIZE,
)

############################################################################################
# Comparison between simulations of the star's metallicity profiles.
############################################################################################

# All models.
metallicityProfilePipeline(
    base_names,
    BASE_SRC_PATH .* snap_paths,
    "animation",
    FPS,
    "stars",
    labels,
    output_path = BASE_OUT_PATH * "metallicity_profile/all_models/stars/",
    sim_cosmo = SIM_COSMO,
    scale = :log10,
    step = 10,
    bins = 80,
    box_factor = 1.0,
    box_size = BOX_SIZE,
)

# All but the run_00 model.
metallicityProfilePipeline(
    base_names[2:end],
    BASE_SRC_PATH .* snap_paths[2:end],
    "animation",
    FPS,
    "stars",
    labels[:, 2:end],
    output_path = BASE_OUT_PATH * "metallicity_profile/new_models/stars/",
    sim_cosmo = SIM_COSMO,
    scale = :log10,
    step = 10,
    bins = 80,
    box_factor = 0.15,
    box_size = BOX_SIZE,
)

############################################################################################
# Comparison between simulations of the gas metallicity profiles.
############################################################################################

# All models.
metallicityProfilePipeline(
    base_names,
    BASE_SRC_PATH .* snap_paths,
    "animation",
    FPS,
    "gas",
    labels,
    output_path = BASE_OUT_PATH * "metallicity_profile/all_models/gas/",
    sim_cosmo = SIM_COSMO,
    scale = :log10,
    step = 10,
    bins = 80,
    box_factor = 3.0,
    box_size = BOX_SIZE,
)

# All but the run_00 and run_old_model models.
metallicityProfilePipeline(
    base_names[3:end],
    BASE_SRC_PATH .* snap_paths[3:end],
    "animation",
    FPS,
    "gas",
    labels[:, 3:end],
    output_path = BASE_OUT_PATH * "metallicity_profile/new_models/gas/",
    sim_cosmo = SIM_COSMO,
    scale = :log10,
    step = 10,
    bins = 80,
    box_factor = 0.6,
    box_size = BOX_SIZE,
)

println("Work done!")
