#= 
  Script for plotting the data generated by 6 single galaxy simulations 
  (perform by GADGET3), using the functions of GADGETPlotting.jl.

  The snapshots and related files are located in:
  ../../sim_data/run_00/
  ../../sim_data/run_old_model/
  ../../sim_data/run_A_01/
  ../../sim_data/run_C_01/
  ../../sim_data/run_E_01/
  ../../sim_data/run_F_01/

  The figures, GIFs and videos will be store in ../../results/analysis_004/, in a directory 
  structure named to describe the contents within.
  
  Plots:
  - Kennicutt-Schmidt law (SFR vs. ρ), comparing simulations.
  - CMDF (cumulative metallicity distribution function), comparing simulations.
 =#

include("../GADGETPlotting/src/GADGETPlotting.jl")

"Base path for the directories where the figures and animations will be saved."
const BASE_OUT_PATH = "../../results/analysis_004/"

"Directory containing the simulations."
const BASE_SRC_PATH = "../../sim_data/"

"Directories containing the snapshot files, base names of the files and labels."
const SNAPSHOTS = [
    "run_00/" "snap" "run_00"
    "run_old_model/" "snap" "run_old_model"
    "run_A_01/" "snap" "run_A_01"
    "run_C_01/" "snap" "run_C_01"
    "run_E_01/" "snap" "run_E_01"
    "run_F_01/" "snap" "run_F_01"
]

"Value of ComovingIntegrationOn: 0 -> Newtonian simulation, 1 -> Cosmological simulation."
const SIM_COSMO = 0

"Frame rate for the animations."
const FPS = 20

snap_paths = SNAPSHOTS[:, 1]
base_names = SNAPSHOTS[:, 2]
labels = reshape(SNAPSHOTS[:, 3], 1, :)

pgfplotsx()

############################################################################################
# Kennicutt-Schmidt law (SFR vs. ρ), comparing simulations.
############################################################################################

# All models.
compareSimulationsPipeline(
    base_names,
    BASE_SRC_PATH .* snap_paths,
    labels,
    "all_models",
    "gas_density",
    "sfr",
    output_path = BASE_OUT_PATH * "Kennicutt-Schmidt/",
    sim_cosmo = SIM_COSMO,
    title = "Kennicutt-Schmidt law",
    scale = (:log10, :log10),
    x_factor = 14,
    smooth_data = true,
    bins = 35,
    legend_pos = :best,
)

# run_00 and run_F_01 only.
compareSimulationsPipeline(
    base_names[[1, end]],
    BASE_SRC_PATH .* snap_paths[[1, end]],
    labels[:, [1, end]],
    "old_model_and_F",
    "gas_density",
    "sfr",
    output_path = BASE_OUT_PATH * "Kennicutt-Schmidt/",
    sim_cosmo = SIM_COSMO,
    title = "Kennicutt-Schmidt law",
    scale = (:log10, :log10),
    x_factor = 14,
    smooth_data = true,
    bins = 35,
    legend_pos = :bottomright,
)

# All but run_00 and run_F_01.
compareSimulationsPipeline(
    base_names[2:(end - 1)],
    BASE_SRC_PATH .* snap_paths[2:(end - 1)],
    labels[:, 2:(end - 1)],
    "new_models",
    "gas_density",
    "sfr",
    output_path = BASE_OUT_PATH * "Kennicutt-Schmidt/",
    sim_cosmo = SIM_COSMO,
    title = "Kennicutt-Schmidt law",
    scale = (:log10, :log10),
    x_factor = 14,
    smooth_data = true,
    bins = 50,
    legend_pos = :topright,
)

############################################################################################
# CMDF (cumulative metallicity distribution function), comparing simulations.
############################################################################################

# All models, x axis normalized.
CMDFPipeline(
    base_names,
    BASE_SRC_PATH .* snap_paths,
    "CMDF_animation",
    FPS,
    labels,
    output_path = BASE_OUT_PATH * "CMDF_normalized/all_models/",
    sim_cosmo = SIM_COSMO,
    step = 10,
    x_norm = true,
)

# All but run_00 and run_F_01, x axis normalized.
CMDFPipeline(
    base_names[2:(end - 1)],
    BASE_SRC_PATH .* snap_paths[2:(end - 1)],
    "CMDF_animation",
    FPS,
    labels[:, 2:(end - 1)],
    output_path = BASE_OUT_PATH * "CMDF_normalized/new_models/",
    sim_cosmo = SIM_COSMO,
    step = 10,
    x_norm = true,
)

# All models.
CMDFPipeline(
    base_names,
    BASE_SRC_PATH .* snap_paths,
    "CMDF_animation",
    FPS,
    labels,
    output_path = BASE_OUT_PATH * "CMDF/all_models/",
    sim_cosmo = SIM_COSMO,
    step = 10,
)

# All but run_00 and run_F_01.
CMDFPipeline(
    base_names[2:(end - 1)],
    BASE_SRC_PATH .* snap_paths[2:(end - 1)],
    "CMDF_animation",
    FPS,
    labels[:, 2:(end - 1)],
    output_path = BASE_OUT_PATH * "CMDF/new_models/",
    sim_cosmo = SIM_COSMO,
    step = 10,
)

println("Work done!")
