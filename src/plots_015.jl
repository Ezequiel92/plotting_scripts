#= 
  Script for plotting the data generated by GADGET3 simulations, using GADGETPlotting.jl.

  The snapshots and related data files are located in:
    ../../sim_data/results/isolated/M016_32_CPD0318
    ../../sim_data/results/isolated/M016_64
    ../../sim_data/results/isolated/M016_64_SMOOTH
    ../../sim_data/results/isolated/M016_128
    ../../sim_data/results/isolated/M016_128_SMOOTH

  The resulting figures, GIFs, and videos will be store in ../../plots/015/.
  
  Plots:
    - Comparison of SFR vs. time.
    - Comparison of star mass vs. time.
    - Comparison of column 2, 3, 4, 5 y 6 vs. column 1 (time):
      - Column 2: mass probability.
      - Column 3: SFR per particle.
      - Column 4: SFR probability
      - Column 5: actual mass.
      - Column 6: actual SFR.
    - Comparison of CPU usage (`cs_sfr` process only).
 =#

push!(LOAD_PATH, "../GADGETPlotting/src/")
using GADGETPlotting, Unitful, UnitfulAstro

"Path to the directory where the figures and animations will be saved."
const BASE_OUT_PATH = "../../plots/015"

"Path to the directory containing the simulations."
const BASE_SRC_PATH = "../../sim_data/results/isolated"

"""
Names of the directories containing the snapshot files 
and the base names of the files.
"""
const SNAPSHOTS = [
    "M016_32_CPD0318" "snap" "M016_32"
    "M016_64" "snap" "M016_64"
    "M016_64_SMOOTH" "snap" "M016_64 - Corrected SD"
    # "M016_128" "snap" "M016_128"
    # "M016_128_SMOOTH" "snap" "M016_128 - Corrected SD"
]

"""
Value of ComovingIntegrationOn: 
0 -> Newtonian simulation.
1 -> Cosmological simulation.
"""
const SIM_COSMO = 0

titles =
    names = [
        "mass_probability_vs_t",
        "SFR_per_particle_vs_t",
        "SFR_probability_vs_t",
        "actual_mass_vs_t",
        "actual_SFR_vs_t",
    ]

sim_paths = SNAPSHOTS[:, 1]
base_names = SNAPSHOTS[:, 2]
labels = reshape(SNAPSHOTS[:, 3], 1, :)

############################################################################################
# Comparison of SFR vs. time
############################################################################################

# Simulations with resolution of 64x64x64 vs. the one with resolution of 32x32x32
compare_simulations_pipeline(
    base_names[1:3],
    joinpath.(BASE_SRC_PATH, sim_paths[1:3]),
    labels[:, 1:3],
    "64vs32",
    "clock_time",
    "sfr",
    output_path = joinpath(BASE_OUT_PATH, "compare_sfr"),
    sim_cosmo = SIM_COSMO,
    scale = (:identity, :log10),
    smooth_data = false,
    text_quantity = "sfr",
    file_name = "sfr",
)

# # Simulations with resolution of 128x128x128 vs. the one with resolution of 32x32x32
# compare_simulations_pipeline(
#     base_names[[1, 4, 5]],
#     joinpath.(BASE_SRC_PATH, sim_paths[[1, 4, 5]]),
#     labels[:, [1, 4, 5]],
#     "128vs32",
#     "clock_time",
#     "sfr",
#     output_path = joinpath(BASE_OUT_PATH, "compare_sfr"),
#     sim_cosmo = SIM_COSMO,
#     scale = (:identity, :log10),
#     smooth_data = false,
#     text_quantity = "sfr",
#     file_name = "sfr",
# )

# ############################################################################################
# # Comparison of star mass vs. time
# ############################################################################################

# # Simulations with resolution of 64x64x64 vs. the one with resolution of 32x32x32
# compare_simulations_pipeline(
#     base_names[1:3],
#     joinpath.(BASE_SRC_PATH, sim_paths[1:3]),
#     labels[:, 1:3],
#     "64vs32",
#     "clock_time",
#     "star_mass",
#     output_path = joinpath(BASE_OUT_PATH, "compare_star_mass"),
#     sim_cosmo = SIM_COSMO,
#     scale = (:identity, :log10),
#     smooth_data = false,
#     text_quantity = "star_mass",
#     file_name = "star_mass",
# )

# # Simulations with resolution of 128x128x128 vs. the one with resolution of 32x32x32
# compare_simulations_pipeline(
#     base_names[[1, 4, 5]],
#     joinpath.(BASE_SRC_PATH, sim_paths[[1, 4, 5]]),
#     labels[:, [1, 4, 5]],
#     "128vs32",
#     "clock_time",
#     "star_mass",
#     output_path = joinpath(BASE_OUT_PATH, "compare_star_mass"),
#     sim_cosmo = SIM_COSMO,
#     scale = (:identity, :log10),
#     smooth_data = false,
#     text_quantity = "star_mass",
#     file_name = "star_mass",
# )

# ############################################################################################
# # Comparison of column 2, 3, 4, 5 y 6 vs. column 1 (time)
# ############################################################################################

# # Simulations with resolution of 64x64x64 vs. the one with resolution of 32x32x32
# sfr_txt_pipeline(
#     base_names[1:3] .* "_000",
#     joinpath.(BASE_SRC_PATH, sim_paths[1:3]),
#     1,
#     [2, 3, 4, 5, 6];
#     output_path = joinpath(BASE_OUT_PATH, "sfr_txt/64"),
#     sim_cosmo = SIM_COSMO,
#     comparison_type = 1,
#     titles,
#     names,
#     labels = labels[:, 1:3],
#     bins = 20,
#     scale = (:identity, :log10),
#     time_unit = UnitfulAstro.Gyr,
# )

# # Simulations with resolution of 128x128x128 vs. the one with resolution of 32x32x32
# sfr_txt_pipeline(
#     base_names[[1, 4, 5]] .* "_000",
#     joinpath.(BASE_SRC_PATH, sim_paths[[1, 4, 5]]),
#     1,
#     [2, 3, 4, 5, 6];
#     output_path = joinpath(BASE_OUT_PATH, "sfr_txt/128"),
#     sim_cosmo = SIM_COSMO,
#     comparison_type = 1,
#     titles,
#     names,
#     labels[:, [1, 4, 5]],
#     bins = 20,
#     scale = (:identity, :log10),
#     time_unit = UnitfulAstro.Gyr,
# )

# ############################################################################################
# # Comparison of CPU usage (`cs_sfr` process only)
# ############################################################################################

# cpu_txt_pipeline(
#     joinpath.(BASE_SRC_PATH, sim_paths[[1,3]]),
#     "cs_sfr",
#     labels[:, [1,3]],
#     output_path = joinpath(BASE_OUT_PATH, "cpu_txt"),
# )

# println("Work done!")
